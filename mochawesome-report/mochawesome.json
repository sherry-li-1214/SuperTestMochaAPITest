{
  "stats": {
    "suites": 6,
    "tests": 10,
    "passes": 6,
    "pending": 4,
    "failures": 0,
    "start": "2023-08-16T07:56:23.464Z",
    "end": "2023-08-16T07:56:25.453Z",
    "duration": 1989,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 40,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "064b0324-816d-49bf-8c66-8e910bc6880e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "74882af0-8726-4ae8-957a-abc5e9cd012e",
          "title": "Delete API tests using supertest",
          "fullFile": "D:\\sherry工作学习\\project\\SuperTest_poc-main\\test\\deleteTest.spec.js",
          "file": "\\test\\deleteTest.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "dummy test",
              "fullTitle": "Delete API tests using supertest dummy test",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "3d46b377-dd28-4b5c-94a6-c9c87ee60b1e",
              "parentUUID": "74882af0-8726-4ae8-957a-abc5e9cd012e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "3d46b377-dd28-4b5c-94a6-c9c87ee60b1e"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "10d59737-f577-406a-90bc-3944e0676888",
          "title": "Test  invalid Tokens with differnt input ",
          "fullFile": "D:\\sherry工作学习\\project\\SuperTest_poc-main\\test\\invalidTokenTest.spec.js",
          "file": "\\test\\invalidTokenTest.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Test  invalid Tokens with differnt input \"",
              "fullTitle": "Test  invalid Tokens with differnt input  \"before all\" hook in \"Test  invalid Tokens with differnt input \"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"=========================Test suites started=================================\");",
              "err": {},
              "uuid": "2691a76c-8fdb-4b3b-bb3e-5953c337faa6",
              "parentUUID": "10d59737-f577-406a-90bc-3944e0676888",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Test  invalid Tokens with differnt input \"",
              "fullTitle": "Test  invalid Tokens with differnt input  \"before each\" hook in \"Test  invalid Tokens with differnt input \"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"=========================Tests start ========================================\");",
              "err": {},
              "uuid": "c3e12a60-5af5-4b46-a6c0-ec4ef0c8f8e4",
              "parentUUID": "10d59737-f577-406a-90bc-3944e0676888",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Test  invalid Tokens with differnt input \"",
              "fullTitle": "Test  invalid Tokens with differnt input  \"after all\" hook in \"Test  invalid Tokens with differnt input \"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"=========================Test suites finished=================================\");",
              "err": {},
              "uuid": "f692af97-9667-4988-97de-f2204cad7196",
              "parentUUID": "10d59737-f577-406a-90bc-3944e0676888",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Test  invalid Tokens with differnt input \"",
              "fullTitle": "Test  invalid Tokens with differnt input  \"after each\" hook in \"Test  invalid Tokens with differnt input \"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"=========================Tests finished======================================\")",
              "err": {},
              "uuid": "4a438306-bd22-43e2-9592-28a40bbcfc50",
              "parentUUID": "10d59737-f577-406a-90bc-3944e0676888",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "TC 0- it should return correct response code:403 unauthorized when  input invalid credentials ",
              "fullTitle": "Test  invalid Tokens with differnt input  TC 0- it should return correct response code:403 unauthorized when  input invalid credentials ",
              "timedOut": false,
              "duration": 382,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(tokenUrl)\n   .post('/oauth/token')\n   .send(credential)\n   .set('Accept','application/json')\n   .set('Content-Type','application/json')\n   .end(function(err, res) {\n\t\t\t\texpect(res.statusCode).to.be.equal(credential.response);\n        if (err) {\n           throw err;\n       }\n\t\n       done();\n   });",
              "err": {},
              "uuid": "35bc96c8-71d3-4a03-b938-a6496ebe257a",
              "parentUUID": "10d59737-f577-406a-90bc-3944e0676888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC 1- it should return correct response code:401 unauthorized when  input invalid credentials ",
              "fullTitle": "Test  invalid Tokens with differnt input  TC 1- it should return correct response code:401 unauthorized when  input invalid credentials ",
              "timedOut": false,
              "duration": 300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(tokenUrl)\n   .post('/oauth/token')\n   .send(credential)\n   .set('Accept','application/json')\n   .set('Content-Type','application/json')\n   .end(function(err, res) {\n\t\t\t\texpect(res.statusCode).to.be.equal(credential.response);\n        if (err) {\n           throw err;\n       }\n\t\n       done();\n   });",
              "err": {},
              "uuid": "779a6bb9-924f-4d84-ae23-8835e29d3b3d",
              "parentUUID": "10d59737-f577-406a-90bc-3944e0676888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC 2- it should return correct response code:401 unauthorized when  input invalid credentials ",
              "fullTitle": "Test  invalid Tokens with differnt input  TC 2- it should return correct response code:401 unauthorized when  input invalid credentials ",
              "timedOut": false,
              "duration": 305,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(tokenUrl)\n   .post('/oauth/token')\n   .send(credential)\n   .set('Accept','application/json')\n   .set('Content-Type','application/json')\n   .end(function(err, res) {\n\t\t\t\texpect(res.statusCode).to.be.equal(credential.response);\n        if (err) {\n           throw err;\n       }\n\t\n       done();\n   });",
              "err": {},
              "uuid": "5826ec8e-2680-46cc-adb1-eda435d94f26",
              "parentUUID": "10d59737-f577-406a-90bc-3944e0676888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC 3- it should return correct response code:403 unauthorized when  input invalid credentials ",
              "fullTitle": "Test  invalid Tokens with differnt input  TC 3- it should return correct response code:403 unauthorized when  input invalid credentials ",
              "timedOut": false,
              "duration": 317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(tokenUrl)\n   .post('/oauth/token')\n   .send(credential)\n   .set('Accept','application/json')\n   .set('Content-Type','application/json')\n   .end(function(err, res) {\n\t\t\t\texpect(res.statusCode).to.be.equal(credential.response);\n        if (err) {\n           throw err;\n       }\n\t\n       done();\n   });",
              "err": {},
              "uuid": "a44aab7e-0c41-45bc-852c-c42e78571d1a",
              "parentUUID": "10d59737-f577-406a-90bc-3944e0676888",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35bc96c8-71d3-4a03-b938-a6496ebe257a",
            "779a6bb9-924f-4d84-ae23-8835e29d3b3d",
            "5826ec8e-2680-46cc-adb1-eda435d94f26",
            "a44aab7e-0c41-45bc-852c-c42e78571d1a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1304,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d5226c75-8ccf-4dfe-b140-9236d130a5c7",
          "title": "Patch API tests using supertest",
          "fullFile": "D:\\sherry工作学习\\project\\SuperTest_poc-main\\test\\patchTest.spec.js",
          "file": "\\test\\patchTest.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "dummy test",
              "fullTitle": "Patch API tests using supertest dummy test",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "7c2dc705-5460-42aa-9e09-1ddc74bf4209",
              "parentUUID": "d5226c75-8ccf-4dfe-b140-9236d130a5c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "7c2dc705-5460-42aa-9e09-1ddc74bf4209"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "61eb27fd-5d27-47ee-aeea-4eae9d6c6409",
          "title": "Post API tests using supertest",
          "fullFile": "D:\\sherry工作学习\\project\\SuperTest_poc-main\\test\\postTest.spec.js",
          "file": "\\test\\postTest.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "dummy test",
              "fullTitle": "Post API tests using supertest dummy test",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "49e4c2f0-51f6-4dbd-a640-ba41b56021b1",
              "parentUUID": "61eb27fd-5d27-47ee-aeea-4eae9d6c6409",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "49e4c2f0-51f6-4dbd-a640-ba41b56021b1"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9cbcf0d0-6ffb-40e8-b585-5530726cf710",
          "title": "Put API tests using supertest",
          "fullFile": "D:\\sherry工作学习\\project\\SuperTest_poc-main\\test\\putTest.spec.js",
          "file": "\\test\\putTest.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "dummy test",
              "fullTitle": "Put API tests using supertest dummy test",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "372ae38e-7383-4097-9108-6f0730639f23",
              "parentUUID": "9cbcf0d0-6ffb-40e8-b585-5530726cf710",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "372ae38e-7383-4097-9108-6f0730639f23"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b773a828-57a8-4d1f-b6b5-d8048caf286b",
          "title": "Test valid Tokens with differnt input",
          "fullFile": "D:\\sherry工作学习\\project\\SuperTest_poc-main\\test\\validTokenTest.spec.js",
          "file": "\\test\\validTokenTest.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Test valid Tokens with differnt input\"",
              "fullTitle": "Test valid Tokens with differnt input \"before all\" hook in \"Test valid Tokens with differnt input\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"=========================Test suites started=================================\");",
              "err": {},
              "uuid": "03537704-a10e-4427-b69b-d1bf6600a73d",
              "parentUUID": "b773a828-57a8-4d1f-b6b5-d8048caf286b",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Test valid Tokens with differnt input\"",
              "fullTitle": "Test valid Tokens with differnt input \"before each\" hook in \"Test valid Tokens with differnt input\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"=========================Tests start ========================================\");",
              "err": {},
              "uuid": "cfcb7e6a-c711-473b-8b88-36f4ceafdbed",
              "parentUUID": "b773a828-57a8-4d1f-b6b5-d8048caf286b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Test valid Tokens with differnt input\"",
              "fullTitle": "Test valid Tokens with differnt input \"after all\" hook in \"Test valid Tokens with differnt input\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"=========================Test suites finished=================================\");\n       // verifyToken(token);",
              "err": {},
              "uuid": "f97601a2-136f-4af8-9b23-1e804ce47aec",
              "parentUUID": "b773a828-57a8-4d1f-b6b5-d8048caf286b",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Test valid Tokens with differnt input\"",
              "fullTitle": "Test valid Tokens with differnt input \"after each\" hook in \"Test valid Tokens with differnt input\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"=========================Tests finished======================================\")",
              "err": {},
              "uuid": "756c0c84-a99d-4cfb-a844-82f21f7a392f",
              "parentUUID": "b773a828-57a8-4d1f-b6b5-d8048caf286b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "TC 0 - it should return correct token  when  input valid credentials ",
              "fullTitle": "Test valid Tokens with differnt input TC 0 - it should return correct token  when  input valid credentials ",
              "timedOut": false,
              "duration": 323,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let baseTime=Math.round(Date.now()/1000);\n request(tokenUrl)\n    .post('/oauth/token')\n    .send(credential)\n    .set('Accept','application/json')\n    .set('Content-Type','application/json')\n    .end(function(err, res) {\n\t\t\t\texpect(res.statusCode).to.be.equal(200);\n        expect(res.body.access_token).not.to.be.null;\n\t\t\t\texpect(res.body.scope).not.to.be.null;\n\t\t\t\texpect(res.body.expire_in).not.to.be.null;\n\t\t\t\texpect(res.body.token_type).not.to.be.null;\n        \n        token = res.body.access_token;\n        //console.log(Object.keys(helper.getTokenInfo(token)));\n        /**Object.keys(helper.getTokenInfo(token)).forEach(key => {\n            console.log(key, helper.getTokenInfo(token)[key]);\n            expect()\n          });\n          */\n/** \n          Verify that the iss (issuer) value is equals to \"https://dev-5twd4ss9.auth0.com/\"\n          3. Verify that the aud (audience) value is equal to \"https://test-data-api.com\"\n          4. Verify that the scope value matches what was provided in the original JSON payload.\n          5. Verify that \"exp\" - \"iat\" = the same value as \"expires_in\" in the original payload.\n          6. The JWT token is signed using RS256. Validate the JWT token using the values provided in the JWKS endpoint (https://dev-5twd4ss9.auth0.com/.well\u0002known/jwks.json).\n */\n        expect(Math.abs(Math.round(Date.now()/1000)-helper.getTokenInfo(token).iat)).to.be.lessThanOrEqual(2);\n        expect(\"https://dev-5twd4ss9.auth0.com/\").to.be.equal(helper.getTokenInfo(token).iss);\n        expect(\"https://test-data-api.com\").to.be.equal(helper.getTokenInfo(token).aud);\n        expect(res.body.scope).to.be.equal(helper.getTokenInfo(token).scope); \n        expect(res.body.expires_in).to.be.equal(helper.getTokenInfo(token).exp-helper.getTokenInfo(token).iat);\n       // expect(helper.getTokenInfo.aud,'');\n       // expect(helper.getTokenInfo.)\n        if (err) {\n            throw err;\n        }\n\t\n        done();\n    });",
              "err": {},
              "uuid": "9bbc7463-aaf6-45eb-98d7-c29c744e28e2",
              "parentUUID": "b773a828-57a8-4d1f-b6b5-d8048caf286b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC 1 - it should return correct token  when  input valid credentials ",
              "fullTitle": "Test valid Tokens with differnt input TC 1 - it should return correct token  when  input valid credentials ",
              "timedOut": false,
              "duration": 340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let baseTime=Math.round(Date.now()/1000);\n request(tokenUrl)\n    .post('/oauth/token')\n    .send(credential)\n    .set('Accept','application/json')\n    .set('Content-Type','application/json')\n    .end(function(err, res) {\n\t\t\t\texpect(res.statusCode).to.be.equal(200);\n        expect(res.body.access_token).not.to.be.null;\n\t\t\t\texpect(res.body.scope).not.to.be.null;\n\t\t\t\texpect(res.body.expire_in).not.to.be.null;\n\t\t\t\texpect(res.body.token_type).not.to.be.null;\n        \n        token = res.body.access_token;\n        //console.log(Object.keys(helper.getTokenInfo(token)));\n        /**Object.keys(helper.getTokenInfo(token)).forEach(key => {\n            console.log(key, helper.getTokenInfo(token)[key]);\n            expect()\n          });\n          */\n/** \n          Verify that the iss (issuer) value is equals to \"https://dev-5twd4ss9.auth0.com/\"\n          3. Verify that the aud (audience) value is equal to \"https://test-data-api.com\"\n          4. Verify that the scope value matches what was provided in the original JSON payload.\n          5. Verify that \"exp\" - \"iat\" = the same value as \"expires_in\" in the original payload.\n          6. The JWT token is signed using RS256. Validate the JWT token using the values provided in the JWKS endpoint (https://dev-5twd4ss9.auth0.com/.well\u0002known/jwks.json).\n */\n        expect(Math.abs(Math.round(Date.now()/1000)-helper.getTokenInfo(token).iat)).to.be.lessThanOrEqual(2);\n        expect(\"https://dev-5twd4ss9.auth0.com/\").to.be.equal(helper.getTokenInfo(token).iss);\n        expect(\"https://test-data-api.com\").to.be.equal(helper.getTokenInfo(token).aud);\n        expect(res.body.scope).to.be.equal(helper.getTokenInfo(token).scope); \n        expect(res.body.expires_in).to.be.equal(helper.getTokenInfo(token).exp-helper.getTokenInfo(token).iat);\n       // expect(helper.getTokenInfo.aud,'');\n       // expect(helper.getTokenInfo.)\n        if (err) {\n            throw err;\n        }\n\t\n        done();\n    });",
              "err": {},
              "uuid": "cd2268fe-a059-4099-9156-83b18931491e",
              "parentUUID": "b773a828-57a8-4d1f-b6b5-d8048caf286b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9bbc7463-aaf6-45eb-98d7-c29c744e28e2",
            "cd2268fe-a059-4099-9156-83b18931491e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 663,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}